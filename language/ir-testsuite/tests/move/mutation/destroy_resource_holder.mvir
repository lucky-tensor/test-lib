module A {
import 0x1.Coin1;
    import 0x1.Diem;
    resource A { c: Diem.Diem<Coin1.Coin1> }
    public new(c: Diem.Diem<Coin1.Coin1>): Self.A {
        return A { c: move(c) };
    }
    public destroy_a(a: Self.A) {
        let c: Diem.Diem<Coin1.Coin1>;
        A { c } = move(a);
        Diem.destroy_zero<Coin1.Coin1>(move(c));
        return;
    }
}

//! new-transaction

import {{default}}.A;
import 0x1.Coin1;
import 0x1.Diem;

main() {
    let zero_resource: Diem.Diem<Coin1.Coin1>;
    let s: A.A;
    zero_resource = Diem.zero<Coin1.Coin1>();
    s = A.new(move(zero_resource));
    A.destroy_a(move(s));

    return;
}

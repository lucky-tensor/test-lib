//! account: alice, 1000000
//! account: bob, 1000000

//! sender: alice
import 0x1.DiemAccount;
import 0x1.Coin1;
import 0x1.Vector;

main(account: &signer) {
    let with_cap: DiemAccount.WithdrawCapability;
    with_cap = DiemAccount.extract_withdraw_capability(copy(account));
    DiemAccount.pay_from<Coin1.Coin1>(&with_cap, {{bob}}, 514, h"", h"");
    DiemAccount.restore_withdraw_capability(move(with_cap));
    assert(false, 42);
    return;
}

// check: "Keep(ABORTED { code: 42,"


//! new-transaction
import 0x1.DiemAccount;
import 0x1.Coin1;

main() {
    assert(DiemAccount.balance<Coin1.Coin1>({{bob}}) == 1000000, 43);
    return;
}

// check: "Keep(EXECUTED)"

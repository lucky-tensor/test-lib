base:
    data_dir: "path/to/data"
    role: "full_node"
    waypoint:
      from_config: "0:683185844ef67e5c8eeaa158e635de2a4c574ce7bbb7f41f787d38db2d623ae2"

execution:
    genesis_file_location: "relative/path/to/genesis"
json_rpc:
    address: 0.0.0.0:8080
    content_length_limit: 4194304 # for upgrade payloads, needs to be big

full_node_networks:
# PUBLIC NETWORK: Serve state sync requests on this port to anyone.
    - listen_address: "/ip4/0.0.0.0/tcp/6180"
      network_id: "public"
      discovery_method: "onchain"
      
# PRIVATE NETWORK for VALIDATOR: Serve state sync requests on this port to anyone. Can be changed to only accept from a certain IP. However Mutual authentication can be used.
    - listen_address: "/ip4/0.0.0.0/tcp/7180"
      network_id:
          private: "vfn"
      max_outbound_connections: 1
      # The identity of the VFN.
      # This can be any peer id generated.
      identity:
          type: from_config
      #     #RANDOM ID GENERATED BY SWARM
          key: f0aa23573ce9f493ef3707c83ce10cac882714554d48fcd453bb5d11795f505d
          peer_id: cd676a3693a80a39a10c81673b8c6e7c
      
      # # For mutual authentication to work the VALIDATOR configs will 
      # # need to include this IDENTITY as a SEED peer in the vfn configurations.
      mutual_authentication: false # This is set to false because a priori we don't know the keys of validator nor fullnode. But best practice is to bind the Validator to the VFN through mutual authentication.
      
      discovery_method: none # since it's usually just pairwise, the Validator connects to VFN

      seeds:
        "c227da54069989f283712e4016704660":
          addresses:
            - "/ip4/127.0.0.1/tcp/58259/ln-noise-ik/c998dcd54c3daf48e0ad516d94b7be0b0b7a27caa00541f2b2c14b13500df10b/ln-handshake/0"
          keys: ["c998dcd54c3daf48e0ad516d94b7be0b0b7a27caa00541f2b2c14b13500df10b"]
          role: "Validator"
